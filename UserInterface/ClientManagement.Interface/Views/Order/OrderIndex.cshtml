@model ClientManagement.DomainModel.OrderProductInfoFilterModel
@{
    ViewBag.Breadcramb = "Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var DeleteData = "Delete_" + Model.OrderId;
}


@Html.HiddenFor(model => model.OrderId)
@Html.HiddenFor(model => model.OrderItemsId)

<div class="Headingtest1">
    <a class="btn btn-xs btn-primary" href="@Url.Action("Index", "Order")">Back</a>
    @{
        if (!Model.IsView)
        {
            <a onclick="OrderItemInformation('@Model.OrderId')" class="btn btn-xs btn-primary" data-placement="top" data-original-title="Add Item">Add Item</a>

            <a href="@Url.Action("GenerateInvoice", "Order", new { submitbtn = "Payment Schedule", OrderId = @Model.OrderId, }) " class="btn btn-xs btn-primary" tabindex="-1" role="menuitem">
                Generate
            </a>

            
        }
    }
</div>

<div id="divOrderDetails">
<div class="panel panel-inverse">
<div class="panel-heading">
    <div class="panel-heading-btn">
        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
        <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
               
    </div>
            
        @if (Model.OrderProductInfoFilterList.Count() > 0)
        {
            <strong>Invoice : @Model.OrderProductInfoFilterList.FirstOrDefault().Name | Total Invoice Amount : @Model.Amount.ToString("c", ClientManagement.DomainModel.Configuration.CultureInfoSettings.GetZACulture().NumberFormat) | <strong>Invoice Date : @Model.OrderDate.ToString("dd MMMM yyyy") </strong></strong>
        }
        else
        {
            <strong>Invoice : None | Total Invoice Amount : @Model.Amount.ToString("c", ClientManagement.DomainModel.Configuration.CultureInfoSettings.GetZACulture().NumberFormat) | <strong>Invoice Date : @Model.OrderDate.ToString("dd MMMM yyyy") </strong></strong>
        }
    </div>           

   <div class="panel-body">
     <div class="table-responsive">
       <table id="data-table22" class="table table-striped table-bordered1">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Discount</th>
                    <th>Cost</th>
                    <th>Remove</th>
                   @* <th>Action</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderProductInfoFilterList)
                {
                    var Amount = @item.Standard.ToString("c", ClientManagement.DomainModel.Configuration.CultureInfoSettings.GetZACulture().NumberFormat);
                    <tr>
                        <td>@item.Product</td>
                        <td>@item.Quantity</td>
                        <td>@item.Discount</td>
                        <td>@Amount</td>

                        <td>
                            @using (Html.BeginForm("DeleteOrderItems", "Order", new { OrderId = Model.OrderId, OrderItemsId = item.OrderItemsId }))
                            {
                                <a href="#@DeleteData" class="btn btn-xs btn-icon btn-circle btn-success" data-toggle="modal"><i class="fa fa-trash-o"></i></a>

                                <div class="modal fade" id="@DeleteData" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">

                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div id="users" class="modal-body">
                                                <p>Are you sure you want to delete this item?</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button aria-hidden="true" data-dismiss="modal" class="btn btn-sm btn-default">
                                                    Close
                                                </button>
                                                <input type="submit" name="submitbtn" class="btn btn-red tooltips" data-placement="top" data-original-title="Remove" value="Remove" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </td>

                       @* <td>
                            @using (Html.BeginForm("AddQuantity", "Order", new { OrderItemsId = item.OrderItemsId, OrderId = item.OrderId }))
                            {
                                @Html.HiddenFor(model => model.OrderId)

                                if (!Model.IsView)
                                {
                                    <a href="#@item.OrderItemsId" class="btn btn-xs btn-primary" data-toggle="modal">Add Quantity</a>
                                }

                                <div class="modal fade" id="@item.OrderItemsId" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div id="users" class="modal-body">
                                                <div class="panel-heading">
                                                    Quantity / Discount Information
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <div>
                                                    Quantity :  @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", @placeholder = "Quantity", type = "number" })
                                                </div>
                                                <div>
                                                    Discount :  @Html.TextBoxFor(x => x.Discount, new { @class = "form-control", @placeholder = "Discount", type = "number" })
                                                </div>
                                                <button aria-hidden="true" data-dismiss="modal" class="btn btn-sm btn-default">
                                                    Close
                                                </button>
                                                <input type="submit" name="submitbtn" class="btn btn-red tooltips" data-placement="top" data-original-title="Submit" value="Submit" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </td>*@
                    </tr>
                }
            </tbody>
            <tfoot>
            <tr>
                <td>@Html.DropDownList("ProductId", new SelectList(ClientManagement.BusinessLogic.GlobalAmin.GetProductsDetails(Model.ProductList), "Value", "Text", Model.OrderId), new { @class = "form-control search-select" })</td>
                <td><input type="text" id="txtQuantity" /></td>
                <td><input type="text" id="txtDiscount" /></td>
                <td><input type="text" id="txtAmount" /></td>
                <td>
                    <input type="button" id="btnAdd" value="Add" />
                </td>
            </tr>
        </tfoot>
        </table>
    </div>
               <input type="button" class="btn btn-xs btn-primary" id="btnSave" value="Save All" />
</div>

        </div>

        </div>
<script>
    function OrderItemInformation(OrderId) {
        $('#OrderItemDetailsView').load('@Url.Action("AddStockItem", "Order")' + '?OrderId=' + OrderId, function () {
            $('#OrderItemDetailsView').modal('show');
        });
    }
    function ClosePopup() {
        $('#OrderItemDetailsView').modal('hide');
    }

    function FarmOrderItemInformation(OrderItemsId) {
        $('#FarmOrderItemDetails').load('@Url.Action("AddFarmOrderItem", "Order")' + '?OrderItemsId=' + OrderItemsId, function () {
            $('#FarmOrderItemDetailsView').modal('show');
        });
    }

    function ProcessSelectedItems(sender, e, OrderId) {
        e.preventDefault();
        var checkboxItems = [];
        $('table [type="checkbox"]').each(function (i, chk) {
            var Itemcheckbox = chk.value;
            if (chk.checked) {
                checkboxItems.push(Itemcheckbox);
            }
        });
        var OrderId = '@Model.OrderId';
        $.ajax({
            cache: false,
            type: 'POST',
            content: "application/json;",
            datatype: "json",
            data: { OrderId: OrderId, ProductInfoIds: checkboxItems },
            traditional: true,
            url: '@Url.Action("ProcessInfoSelected", "Order")',
            success: function (data) {
                if (data.success) {
                    refresh();
                    $('#OrderItemDetailsView').modal('hide');
                }
            }
        });
    }

    function refresh() {
        $.ajax({
            cache: false,
            type: 'GET',
            content: "application/json;",
            datatype: "json",
            url: '@Url.Action("Refresh", "Order", new { OrderId = @Model.OrderId })',
            success: function (data) {
                $('#divOrderDetails').empty();
                $('#divOrderDetails').html(data);
            }
        });
    }
</script>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
<script type="text/javascript">
    $("body").on("click", "#btnAdd", function () {
        //Reference the Name and Country TextBoxes.
        var txProduct = $("#txProduct");
        var txtQuantity = $("#txtQuantity");
        var txtDiscount = $("#txtDiscount");
        var txtAmount = $("#txtAmount");

        //Get the reference of the Table's TBODY element.
        var tBody = $("#data-table22 > TBODY")[0];

        //Add Row.
        var row = tBody.insertRow(-1);

        //Add txProduct cell.
        //var cell = $(row.insertCell(-1));
        //cell.html(txProduct.val());

        var select = $("#ProductId option:selected").val();
        cell = $(row.insertCell(-1));
        cell.html(select);

        //Add txtQuantity cell.
        cell = $(row.insertCell(-1));
        cell.html(txtQuantity.val());

        //Add txtDiscount cell.
        cell = $(row.insertCell(-1));
        cell.html(txtDiscount.val());

        //Add txtAmount cell.
        cell = $(row.insertCell(-1));
        cell.html(txtAmount.val());
        
        //Add Button cell.
        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        //Clear the TextBoxes.
        txProduct.val("");
        txtQuantity.val("");
        txtDiscount.val("");
        txtAmount.val("");
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#data-table22")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    $("body").on("click", "#btnSave", function () {
        //Loop through the Table rows and build a JSON array.
        var invoices = new Array();
        $("#data-table22 TBODY TR").each(function () {
            var row = $(this);
            var invoice = {};
            invoice.OrderId = @Model.OrderId;
            invoice.Product = row.find("TD").eq(0).html();
            invoice.Quantity = row.find("TD").eq(1).html();
            invoice.Discount = row.find("TD").eq(2).html();
            invoice.Amount = row.find("TD").eq(3).html();
            invoices.push(invoice);
        });

        //Send the JSON array to Controller using AJAX.
        $.ajax({
            type: "POST",
            url: '@Html.Raw(@Url.Action("InsertItems", "Order"))',
            data: { InformationList: invoices },
            //url: "/Order/InsertItems",
            //data: JSON.stringify(invoices),
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {    
                refresh();
                //$('#RefreshInfo').click();
            }
        });
    });
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawVisualization);

    function drawVisualization() {

        var jsonData = $.ajax({
            url: '@Html.Raw(@Url.Action("GerOrderItemsGraph", "Order", new { @OrderId = @Model.OrderId }))',
            dataType: 'JSON',
            async: false
        }).responseJSON;


        var options = {
            title: 'Orders Information',
            vAxis: { title: 'Quantity' },
            hAxis: { title: 'Product' },
            seriesType: 'bars',
            series: { 5: { type: 'line' } },
            colors: ['#3D9400', '#3D9400', '#3D9400',
                  '#3D9400', '#3D9400', '#3D9400']
        };

        var data = google.visualization.arrayToDataTable(jsonData);
        var chart = new google.visualization.ComboChart(document.getElementById('chart_div1'));
        chart.draw(data, options);
    }
</script>

<div class="modal fade" id="OrderItemDetailsView" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="OrderItemInfoView" class="modal-body">
                <div id="OrderItemDetailsView"></div>
            </div>
            <div class="modal-footer">
                <button aria-hidden="true" data-dismiss="modal" class="btn btn-sm btn-default">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>


<div id="FarmOrderItemDetailsView" class="modal container fade" tabindex="-1" data-width="1200" style="display: none;">

    <div class="modal-dialog" style="width: 1200px">
        <div class="modal-content" style="width: 1200px">
            <div id="FarmOrderItemInfo" class="modal-body" style="width: 1200px">
                <div id="FarmOrderItemDetails"></div>
            </div>
            <div class="modal-footer">
                <button aria-hidden="true" data-dismiss="modal" class="btn btn-sm btn-default">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
















